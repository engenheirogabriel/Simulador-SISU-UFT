#include <iostream>
#include <stdio.h>
using namespace std;
int main() {
	int rep;
	do {
		//system("cls");
		cout << "Viva o cripto-anarquismo da sociedade de leis privadas prevista pela escola de Viena!" << endl;
		cout << "Seja bem vindo ao simulador do SISU 2020/1, um projeto independente do acadêmico de Engenharia Civil, Gabriel Miranda, que calcula cursos compatíveis com a nota do pretendente à vaga na Universidade Federal do Tocantins." << endl;
		cout << "" << endl;
		cout << "Contato: engenheiroancap@gmail.com" << endl;
		cout << "Ofereço aulas de reforço e de programação, também faço projetos de algoritmos."<< endl;
		cout << "" << endl;
		cout << "Doações no endereço nano:" << endl;
		cout << "nano_1uxndhc1o37ex5azfwrgu8ta54ok4jcftxbfpgtg761dhi45amhb9hoe59oz" << endl;
		cout << "" << endl;
		cout << "Utilize .(ponto) como separador decimal. " << endl;
		cout << " " << endl;
		cout << "Digite a nota em linguagens: " << endl;
		float lin;
		cin >> lin;
		cout << " " << endl;
		cout << "Digite a nota em redação: " << endl;
		float red;
		cin >> red;
		cout << " " << endl;
		cout << "Digite a nota em ciências humanas: " << endl;
		float hum;
		cin >> hum;
		cout << " " << endl;
		cout << "Digite a nota em matemática: " << endl;
		float mat;
		cin >> mat;
		cout << " " << endl;
		cout << "Digite a nota em ciências da natureza: " << endl;
		float nat;
		cin >> nat;
		cout << " " << endl;
		cout << "Você cursou integralmente o ensino médio em escolas públicas? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int esc;
		cin >> esc;
		cout << " " << endl;
		cout << "Você é indígena? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int ind;
		cin >> ind;
		cout << " " << endl;
		cout << "Você é negro, pardo ou indígena? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int cor;
		cin >> cor;
		cout << " " << endl;
		cout << "Você tem renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int ren;
		cin >> ren;
		cout << " " << endl;
		cout << "Você é portador de deficiência inscrita na Classificação Internacional de Doença? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int def;
		cin >> def;
		cout << " " << endl;
		cout << "Você é quilombola? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int qui;
		cin >> qui;
		cout << " " << endl;
		cout << "Você deseja cursar em qual cidade?" << endl;
		cout << "1- Palmas" << endl;
		cout << "2- Araguaína" << endl;
		cout << "3- Porto Nacional" << endl;
		cout << "4- Gurupi" << endl;
		cout << "5- Miracema" << endl;
		cout << "6- Tocantinópolis" << endl;
		cout << "7- Arraias" << endl;
		int city;
		cin >> city;
		cout << "Entre em contato comigo para ter acesso à senha. Motivo: criei para saber quem está utilizando este simulador." << endl;
		cout << "Digite a senha do simulador:" << endl;
		int senha;
		cin >> senha;
		int inferior = 9250;
		int superior = 9252;
		cout << ""<<endl;
		cout << "Você passaria nos seguintes cursos: " << endl;
		cout << " " << endl;
		//retirei um centésimo das notas de corte por conta do arredondamento feito pelo MEC
		while (city>0 and city<2 and senha>inferior and senha< superior) {
			cout << "Universidade Federal do Tocantins, Campus Palmas:" << endl << " " << endl;
			float admn = (((red + nat + (hum * 2) + (lin * 4) + (mat * 4)) / 12));
			float redadm = 400;
			float adm = 646.88;
			float adma1 = 511.55;
			float adma2 = 608.43;
			float adml1 = 650.05;
			float adml2 = 603.18;
			float adml5 = 651.18;
			float adml6 = 618.87;
			float adml10 = 583.78;
			float adml14 = 600.21;
			float arqn = (((red + nat + hum + lin + mat) / 5));
			float redarq = 300;
			float arq = 711.67;
			float arqa1 = 555.07;
			float arqa2 = 590.79;
			float arql2 = 658.35;
			float arql6 = 667.29;
			float arql10 = 603.95;
			float arql14 = 552.43;
			float comn = (((red + (nat * 3) + hum + (lin * 4) + (mat * 4)) / 13));
			float redcom = 300;
			float com = 651.16;
			float coma1 = 0.01; //SOBROU
			float coma2 = 488.24;
			float coml1 = 660.92;
			float coml2 = 614.92;
			float coml5 = 606.46;
			float coml6 = 636.39;
			float coml10 = 632.92;
			float coml14 = 489.67;
			float conn = ((((red * 2) + nat + (hum * 3) + (lin * 4) + (mat * 3)) / 13));
			float redcon = 300;
			float con = 646.6;
			float cona1 = 482.56;
			float cona2 = 641.92;
			float conl1 = 638.61;
			float conl2 = 592.07;
			float conl5 = 662.65;
			float conl6 = 643.65;
			float conl10 = 551.22;
			float conl14 = 550.87;
			float econ = ((((red * 2) + nat + (hum * 3) + (lin * 3) + (mat * 3)) / 12));
			float redeco = 300;
			float eco = 651.88;
			float ecoa1 = 532.4;
			float ecoa2 = 667.68;
			float ecol1 = 630.3;
			float ecol2 = 626.94;
			float ecol5 = 624.01;
			float ecol6 = 610.85;
			float ecol10 = 504.61;
			float ecol14 = 609.96;
			float dirn = (((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12));
			float reddir = 300;
			float dir = 697.52;
			float dira1 = 618.61;
			float dira2 = 633.21;
			float dirl1 = 667.19;
			float dirl2 = 653.62;
			float dirl5 = 678.95;
			float dirl6 = 681.52;
			float dirl10 = 603.25;
			float dirl14 = 627.17;
			float enfn = (((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13));
			float redenf = 300;
			float enf = 674.2;
			float enfa1 = 594.37;
			float enfa2 = 578.18;
			float enfl2 = 632.08;
			float enfl6 = 663.24;
			float enfl10 = 540.44;
			float ambn = (((red + (nat * 3) + (hum * 2) + (lin * 2) + (mat * 3)) / 11));
			float redamb = 450;
			float amb = 636.08;
			float amba1 = 0.01; //SOBROU
			float amba2 = 554.89;
			float ambl1 = 626.14;
			float ambl2 = 600.32;
			float ambl5 = 647.54;
			float ambl6 = 623.27;
			float ambl10 = 510.96;
			float ambl14 = 0.01; // SOBROU
			float civn = (((red + (nat * 4) + hum + (lin * 3) + (mat * 4)) / 13));
			float redciv = 400;
			float civ = 688.68;
			float civa1 = 573.34;
			float civa2 = 591.01;
			float civl1 = 681.48;
			float civl2 = 641.03;
			float civl5 = 595.52;
			float civl6 = 637.49;
			float civl10 = 518.72;
			float civl14 = 575.17;
			float alin = ((((red * 2) + (nat * 4) + hum + (lin * 2) + (mat * 4)) / 13));
			float redali = 300;
			float ali = 641.79;
			float alia1 = 525.65;
			float alia2 = 544.41;
 			float alil1 = 633.78;
			float alil2 = 595.37;
			float alil5 = 622.27;
			float alil6 = 608.74;
			float alil10 = 422.83;
			float alil14 = 0.01; // SOBROU
			float elen = (((red + (nat * 3) + hum + (lin * 4) + (mat * 4)) / 13));
			float redele = 300;
			float ele = 640.46;
			float elea1 = 525.72;
			float elea2 = 647.54;
			float elel1 = 672.43;
			float elel2 = 641.81;
			float elel5 = 663.91;
			float elel6 = 627.27;
			float elel10 = 0.01; //SOBROU
			float elel14 = 430.24;
			float filn = ((((red * 2) + nat + (hum * 4) + (lin * 4) + mat) / 12));
			float redfil = 300;
			float fil = 619.23;
			float fila1 = 463.52;
			float fila2 = 505.2;
			float fill1 = 609.46;
			float fill2 = 580.7;
			float fill5 = 652.25;
			float fill6 = 603.95;
			float fill10 = 0.01; //SOBROU
			float fill14 = 585.33;
			float jorn = ((((red * 3) + nat + (hum * 3) + (lin * 4) + (mat * 2)) / 13));
			float redjor = 400;
			float jor = 679.67;
			float jora1 = 576.2;
			float jora2 = 501.38;
			float jorl1 = 665.34;
			float jorl2 = 619.81;
			float jorl5 = 686.36;
			float jorl6 = 616.62;
			float jorl10 = 501.23;
			float jorl14 = 559;
			float medn = ((((red * 3) + (nat * 4) + (hum * 2) + (lin * 3) + (mat * 2)) / 14));
			float redmed = 300;
			float med = 771.58;
			float meda1 = 719.68;
			float meda2 = 733.78;
			float medl1 = 728.42;
			float medl2 = 729.38;
			float medl5 = 745.85;
			float medl6 = 732.3;
			float medl10 = 651.89;
			float medl14 = 720.16;
			float nutn = ((((red * 2) + (nat * 4) + (hum * 2) + (lin * 3) + (mat * 3)) / 14));
			float rednut = 300;
			float nut = 678.11;
			float nuta1 = 569.54;
			float nuta2 = 596.8;
			float nutl1 = 677.1;
			float nutl2 = 642.35;
			float nutl5 = 665.26;
			float nutl6 = 626.64;
			float nutl10 = 537.21;
			float nutl14 = 0.01; //SOBROU
			float pedn = (((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12));
			float redped = 300;
			float ped = 594.48;
			float peda1 = 466.97;
			float peda2 = 531.91;
			float pedl1 = 576;
			float pedl2 = 574.28;
			float pedl5 = 588.92;
			float pedl6 = 581.43;
			float pedl10 = 504.55;
			float pedl14 = 506.52;
			float tean = (((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12));
			float redtea = 300;
			float tea = 578.51;
			float teaa1 = 0.01; //SOBROU
			float teaa2 = 521.82;
			float teal1 = 561.02;
			float teal2 = 567.99;
			float teal5 = 620.5;
			float teal6 = 584.99;
			float teal10 = 449.97;
			float teal14 = 0.01; // SOBROU
			while (red >= redadm) {
				while (admn >= adm) {
					cout << "Administração " << endl;
					break;
				}
				while (admn >= adml1 and ren >= 2 and esc >= 2) {
					cout << "Administração para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (admn >= adml2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Administração para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (admn >= adml5 and esc >= 2) {
					cout << "Administração para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (admn >= adml6 and cor >= 2 and esc >= 2) {
					cout << "Administração para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (admn >= adml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Administração para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (admn >= adml14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Administração para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (admn >= adma1 and ind >= 2) {
					cout << "Administração para candidato indígena" << endl;
					break;
				}
				while (admn >= adma2 and qui >= 2) {
					cout << "Administração para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redarq) {
				while (arqn >= arq) {
					cout << "Arquitetura " << endl;
					break;
				}
				while (arqn >= arql2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Arquitetura para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (arqn >= arql6 and cor >= 2 and esc >= 2) {
					cout << "Arquitetura para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (arqn >= arql10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Arquitetura para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (arqn >= arql14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Arquitetura para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (arqn >= arqa1 and ind >= 2) {
					cout << "Arquitetura para candidato indígena" << endl;
					break;
				}
				while (arqn >= arqa2 and qui >= 2) {
					cout << "Arquitetura para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redcom) {
				while (comn >= com) {
					cout << "Ciência da Computação " << endl;
					break;
				}
				while (comn >= coml1 and ren >= 2 and esc >= 2) {
					cout << "Ciência da Computação para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (comn >= coml2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciência da Computação para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (comn >= coml5 and esc >= 2) {
					cout << "Ciência da Computação para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (comn >= coml6 and cor >= 2 and esc >= 2) {
					cout << "Ciência da Computação para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (comn >= coml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciência da Computação para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (comn >= coml14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Ciência da Computação para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (comn >= coma1 and ind >= 2) {
					cout << "Ciência da Computação para candidato indígena" << endl;
					break;
				}
				while (comn >= coma2 and qui >= 2) {
					cout << "Ciência da Computação para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redcon) {
				while (conn >= con) {
					cout << "Ciências Contábeis " << endl;
					break;
				}
				while (conn >= conl1 and ren >= 2 and esc >= 2) {
					cout << "Ciências Contábeis para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (conn >= conl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Contábeis para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (conn >= conl5 and esc >= 2) {
					cout << "Ciências Contábeis para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (conn >= conl6 and cor >= 2 and esc >= 2) {
					cout << "Ciências Contábeis para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (conn >= conl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Contábeis para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (conn >= conl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Ciências Contábeis para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (conn >= cona1 and ind >= 2) {
					cout << "Ciências Contábeis para candidato indígena" << endl;
					break;
				}
				while (conn >= cona2 and qui >= 2) {
					cout << "Ciências Contábeis para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redeco) {
				while (econ >= eco) {
					cout << "Ciências Econômicas " << endl;
					break;
				}
				while (econ >= ecol1 and ren >= 2 and esc >= 2) {
					cout << "Ciências Econômicas para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (econ >= ecol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Econômicas para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (econ >= ecol5 and esc >= 2) {
					cout << "Ciências Econômicas para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (econ >= ecol6 and cor >= 2 and esc >= 2) {
					cout << "Ciências Econômicas para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (econ >= ecol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Econômicas para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (econ >= ecol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Ciências Econômicas para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (econ >= ecoa1 and ind >= 2) {
					cout << "Ciências Econômicas para candidato indígena" << endl;
					break;
				}
				while (econ >= ecoa2 and qui >= 2) {
					cout << "Ciências Econômicas para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= reddir) {
				while (dirn >= dir) {
					cout << "Direito " << endl;
					break;
				}
				while (dirn >= dirl1 and ren >= 2 and esc >= 2) {
					cout << "Direito para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (dirn >= dirl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Direito para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (dirn >= dirl5 and esc >= 2) {
					cout << "Direito para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (dirn >= dirl6 and cor >= 2 and esc >= 2) {
					cout << "Direito para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (dirn >= dirl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Direito para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (dirn >= dirl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Direito para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (dirn >= dira1 and ind >= 2) {
					cout << "Direito para candidato indígena" << endl;
					break;
				}
				while (dirn >= dira2 and qui >= 2) {
					cout << "Direito para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redenf) {
				while (enfn >= enf) {
					cout << "Enfermagem " << endl;
					break;
				}
				while (enfn >= enfl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Enfermagem para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (enfn >= enfl6 and cor >= 2 and esc >= 2) {
					cout << "Enfermagem para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (enfn >= enfl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Enfermagem para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (enfn >= enfa1 and ind >= 2) {
					cout << "Enfermagem para candidato indígena" << endl;
					break;
				}
				while (enfn >= enfa2 and qui >= 2) {
					cout << "Enfermagem para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redamb) {
				while (ambn >= amb) {
					cout << "Engenharia Ambiental " << endl;
					break;
				}
				while (ambn >= ambl1 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Ambiental para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (ambn >= ambl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Ambiental para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (ambn >= ambl5 and esc >= 2) {
					cout << "Engenharia Ambiental para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (ambn >= ambl6 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Ambiental para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (ambn >= ambl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Ambiental para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (ambn >= ambl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Ambiental para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (ambn >= amba1 and ind >= 2) {
					cout << "Engenharia Ambiental para candidato indígena" << endl;
					break;
				}
				while (ambn >= amba2 and qui >= 2) {
					cout << "Engenharia Ambiental para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redciv) {
				while (civn >= civ) {
					cout << "Engenharia Civil " << endl;
					break;
				}
				while (civn >= civl1 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Civil para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (civn >= civl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Civil para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (civn >= civl5 and esc >= 2) {
					cout << "Engenharia Civil para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (civn >= civl6 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Civil para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (civn >= civl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Civil para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (civn >= civl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Civil para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (civn >= civa1 and ind >= 2) {
					cout << "Engenharia Civil para candidato indígena" << endl;
					break;
				}
				while (civn >= civa2 and qui >= 2) {
					cout << "Engenharia Civil para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redali) {
				while (alin >= ali) {
					cout << "Engenharia de Alimentos " << endl;
					break;
				}
				while (alin >= alil1 and ren >= 2 and esc >= 2) {
					cout << "Engenharia de Alimentos para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (alin >= alil2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia de Alimentos para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (alin >= alil5 and esc >= 2) {
					cout << "Engenharia de Alimentos para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (alin >= alil6 and cor >= 2 and esc >= 2) {
					cout << "Engenharia de Alimentos para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (alin >= alil10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia de Alimentos para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (alin >= alil14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Engenharia de Alimentos para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (alin >= alia1 and ind >= 2) {
					cout << "Engenharia de Alimentos para candidato indígena" << endl;
					break;
				}
				while (alin >= alia2 and qui >= 2) {
					cout << "Engenharia de Alimentos para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redele) {
				while (elen >= ele) {
					cout << "Engenharia Elétrica " << endl;
					break;
				}
				while (elen >= elel1 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Elétrica para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (elen >= elel2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Elétrica para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (elen >= elel5 and esc >= 2) {
					cout << "Engenharia Elétrica para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (elen >= elel6 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Elétrica para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (elen >= elel10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Elétrica para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (elen >= elel14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Elétrica para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (elen >= elea1 and ind >= 2) {
					cout << "Engenharia Elétrica para candidato indígena" << endl;
					break;
				}
				while (elen >= elea2 and qui >= 2) {
					cout << "Engenharia Elétrica para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redfil) {
				while (filn >= fil) {
					cout << "Filosofia " << endl;
					break;
				}
				while (filn >= fill1 and ren >= 2 and esc >= 2) {
					cout << "Filosofia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (filn >= fill2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Filosofia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (filn >= fill5 and esc >= 2) {
					cout << "Filosofia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (filn >= fill6 and cor >= 2 and esc >= 2) {
					cout << "Filosofia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (filn >= fill10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Filosofia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (filn >= fill14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Filosofia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (filn >= fila1 and ind >= 2) {
					cout << "Filosofia para candidato indígena" << endl;
					break;
				}
				while (filn >= fila2 and qui >= 2) {
					cout << "Filosofia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redjor) {
				while (jorn >= jor) {
					cout << "Jornalismo " << endl;
					break;
				}
				while (jorn >= jorl1 and ren >= 2 and esc >= 2) {
					cout << "Jornalismo para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (jorn >= jorl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Jornalismo para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (jorn >= jorl5 and esc >= 2) {
					cout << "Jornalismo para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (jorn >= jorl6 and cor >= 2 and esc >= 2) {
					cout << "Jornalismo para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (jorn >= jorl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Jornalismo para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (jorn >= jorl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Jornalismo para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (jorn >= jora1 and ind >= 2) {
					cout << "Jornalismo para candidato indígena" << endl;
					break;
				}
				while (jorn >= jora2 and qui >= 2) {
					cout << "Jornalismo para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redmed) {
				while (medn >= med) {
					cout << "Medicina " << endl;
					break;
				}
				while (medn >= medl1 and ren >= 2 and esc >= 2) {
					cout << "Medicina para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Medicina para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl5 and esc >= 2) {
					cout << "Medicina para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl6 and cor >= 2 and esc >= 2) {
					cout << "Medicina para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= meda1 and ind >= 2) {
					cout << "Medicina para candidato indígena" << endl;
					break;
				}
				while (medn >= meda2 and qui >= 2) {
					cout << "Medicina para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= rednut) {
				while (nutn >= nut) {
					cout << "Nutrição " << endl;
					break;
				}
				while (nutn >= nutl1 and ren >= 2 and esc >= 2) {
					cout << "Nutrição para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (nutn >= nutl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Nutrição para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (nutn >= nutl5 and esc >= 2) {
					cout << "Nutrição para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (nutn >= nutl6 and cor >= 2 and esc >= 2) {
					cout << "Nutrição para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (nutn >= nutl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Nutrição para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (nutn >= nutl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Nutrição para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (nutn >= nuta1 and ind >= 2) {
					cout << "Nutrição para candidato indígena" << endl;
					break;
				}
				while (nutn >= nuta2 and qui >= 2) {
					cout << "Nutrição para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redped) {
				while (pedn >= ped) {
					cout << "Pedagogia " << endl;
					break;
				}
				while (pedn >= pedl1 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl5 and esc >= 2) {
					cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl6 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= peda1 and ind >= 2) {
					cout << "Pedagogia para candidato indígena" << endl;
					break;
				}
				while (pedn >= peda2 and qui >= 2) {
					cout << "Pedagogia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redtea) {
				while (tean >= tea) {
					cout << "Teatro " << endl;
					break;
				}
				while (tean >= teal1 and ren >= 2 and esc >= 2) {
					cout << "Teatro para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (tean >= teal2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Teatro para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (tean >= teal5 and esc >= 2) {
					cout << "Teatro para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (tean >= teal6 and cor >= 2 and esc >= 2) {
					cout << "Teatro para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (tean >= teal10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Teatro para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (tean >= teal14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Teatro para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (tean >= teaa1 and ind >= 2) {
					cout << "Teatro para candidato indígena" << endl;
					break;
				}
				while (tean >= teaa2 and qui >= 2) {
					cout << "Teatro para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << " " << endl;
		while(city > 1 and city < 3 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Araguaína (CIMBA):" << endl << " " << endl;
			float letn = ((red + nat + hum + lin + mat) / 5);
			float redlet = 300;
			float let = 620.51;
			float leta1 = 516.53;
			float leta2 = 544.71;
			float letl1 = 601.25;
			float letl2 = 587.25;
			float letl5 = 606.85;
			float letl6 = 616.19;
			float letl10 = 524.69;
			float letl14 = 467.75;
			float bion = ((red + (nat * 4) + (hum * 2) + (lin * 4) + (mat * 2)) / 13);
			float redbio = 300;
			float bio = 620.71;
			float bioa1 = 483.11;
			float bioa2 = 571.5;
			float biol1 = 584.53;
			float biol2 = 608.08;
			float biol5 = 620.41;
			float biol6 = 614.51;
			float biol10 = 563.34;
			float biol14 = 392.25;
			float fisn = ((red + (nat * 3) + hum + (lin * 2.5) + (mat * 3)) / 10.5);
			float redfis = 300;
			float fis = 619.51;
			float fisa1 = 424.46;
			float fisa2 = 548.22;
			float fisl1 = 574.67;
			float fisl2 = 567.5;
			float fisl5 = 601.08;
			float fisl6 = 526.59;
			float fisl10 = 521.18;
			float fisl14 = 0.01; // SOBROU
			float geon = ((red + nat + (hum * 3) + (lin * 2) + mat) / 8);
			float redgeo = 300;
			float geo = 579.52;
			float geoa1 = 531.42;
			float geoa2 = 544.84;
			float geol1 = 536.92;
			float geol2 = 552.98;
			float geol5 = 571.3;
			float geol6 = 555.27;
			float geol10 = 523.42;
			float geol14 = 0.01; // SOBROU
			float coon = ((red + nat + (hum * 2) + (lin * 2) + mat) / 7);
			float redcoo = 0.01;
			float coo = 570.63;
			float cooa1 = 443.22;
			float cooa2 = 486.56;
			float cool1 = 560.45;
			float cool2 = 566.22;
			float cool5 = 537.33;
			float cool6 = 584.96;
			float cool10 = 462.96;
			float cool14 = 0.01; // SOBROU
			float turn = ((red + nat + (hum * 2) + (lin * 2) + mat) / 7);
			float redtur = 300;
			float tur = 558.45;
			float tura1 = 476.19;
			float tura2 = 419.82;
			float turl1 = 576.13;
			float turl2 = 544.6;
			float turl5 = 562.02;
			float turl6 = 550.66;
			float turl10 = 434.09;
			float turl14 = 0.01; // SOBROU
			float hisn = ((red + nat + (hum * 3) + (lin * 2) + mat) / 8);
			float redhis = 300;
			float his = 610.12;
			float hisa1 = 432.64;
			float hisa2 = 597.77;
			float hisl1 = 613.73;
			float hisl2 = 597.27;
			float hisl5 = 627.17;
			float hisl6 = 589.94;
			float hisl10 = 512.1;
			float hisl14 = 536.58;
			float logn = (((red * 2) + nat + (hum * 2) + (lin * 4) + (mat * 4)) / 13);
			float redlog = 300;
			float log = 605.97;
			float loga1 = 519.44;
			float loga2 = 528.08;
			float logl1 = 584.13;
			float logl2 = 576.17;
			float logl5 = 617.61;
			float logl6 = 580.09;
			float logl10 = 485.63;
			float logl14 = 483.87;
			float maten = ((red + nat + hum + lin + mat) / 5);
			float redmate = 300;
			float mate = 604.87;
			float matea1 = 540.57;
			float matea2 = 527.81;
			float matel1 = 599.55;
			float matel2 = 590.07;
			float matel5 = 600.01;
			float matel6 = 597.87;
			float matel10 = 0.01; // SOBROU
			float matel14 = 0.01; // SOBROU
			float quimn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float redquim = 300;
			float quim = 601.07;
			float quima1 = 462.27;
			float quima2 = 596.61;
			float quiml1 = 640.98;
			float quiml2 = 561.02;
			float quiml5 = 577.37;
			float quiml6 = 561.75;
			float quiml10 = 415.93;
			float quiml14 = 567.67;
			while (red >= redlet) {
				while (letn >= let) {
					cout << "Letras (Língua Portuguesa) " << endl;
					break;
				}
				while (letn >= letl1 and ren >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl5 and esc >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl6 and cor >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= leta1 and ind >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato indígena" << endl;
					break;
				}
				while (letn >= leta2 and qui >= 2) {
					cout << "Letras (Língua Portuguesa) para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redbio) {
				while (bion >= bio) {
					cout << "Biologia " << endl;
					break;
				}
				while (bion >= biol1 and ren >= 2 and esc >= 2) {
					cout << "Biologia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Biologia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol5 and esc >= 2) {
					cout << "Biologia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol6 and cor >= 2 and esc >= 2) {
					cout << "Biologia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Biologia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Biologia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= bioa1 and ind >= 2) {
					cout << "Biologia para candidato indígena" << endl;
					break;
				}
				while (bion >= bioa2 and qui >= 2) {
					cout << "Biologia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redfis) {
				while (fisn >= fis) {
					cout << "Física " << endl;
					break;
				}
				while (fisn >= fisl1 and ren >= 2 and esc >= 2) {
					cout << "Física para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (fisn >= fisl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Física para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (fisn >= fisl5 and esc >= 2) {
					cout << "Física para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (fisn >= fisl6 and cor >= 2 and esc >= 2) {
					cout << "Física para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (fisn >= fisl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Física para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (fisn >= fisl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Física para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (fisn >= fisa1 and ind >= 2) {
					cout << "Física para candidato indígena" << endl;
					break;
				}
				while (fisn >= fisa2 and qui >= 2) {
					cout << "Física para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redgeo) {
				while (geon >= geo) {
					cout << "Geografia " << endl;
					break;
				}
				while (geon >= geol1 and ren >= 2 and esc >= 2) {
					cout << "Geografia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Geografia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol5 and esc >= 2) {
					cout << "Geografia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol6 and cor >= 2 and esc >= 2) {
					cout << "Geografia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geoa1 and ind >= 2) {
					cout << "Geografia para candidato indígena" << endl;
					break;
				}
				while (geon >= geoa2 and qui >= 2) {
					cout << "Geografia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redcoo) {
				while (coon >= coo) {
					cout << "Gestão de Cooperativas " << endl;
					break;
				}
				while (coon >= cool1 and ren >= 2 and esc >= 2) {
					cout << "Gestão de Cooperativas para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (coon >= cool2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Gestão de Cooperativas para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (coon >= cool5 and esc >= 2) {
					cout << "Gestão de Cooperativas para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (coon >= cool6 and cor >= 2 and esc >= 2) {
					cout << "Gestão de Cooperativas para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (coon >= cool10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Gestão de Cooperativas para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (coon >= cool14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Gestão de Cooperativas para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (coon >= cooa1 and ind >= 2) {
					cout << "Gestão de Cooperativas para candidato indígena" << endl;
					break;
				}
				while (coon >= cooa2 and qui >= 2) {
					cout << "Gestão de Cooperativas para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redtur) {
				while (turn >= tur) {
					cout << "Gestão de Turismo " << endl;
					break;
				}
				while (turn >= turl1 and ren >= 2 and esc >= 2) {
					cout << "Gestão de Turismo para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Gestão de Turismo para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl5 and esc >= 2) {
					cout << "Gestão de Turismo para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl6 and cor >= 2 and esc >= 2) {
					cout << "Gestão de Turismo para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Gestão de Turismo para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Gestão de Turismo para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= tura1 and ind >= 2) {
					cout << "Gestão de Turismo para candidato indígena" << endl;
					break;
				}
				while (turn >= tura2 and qui >= 2) {
					cout << "Gestão de Turismo para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redhis) {
				while (hisn >= his) {
					cout << "História " << endl;
					break;
				}
				while (hisn >= hisl1 and ren >= 2 and esc >= 2) {
					cout << "História para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "História para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl5 and esc >= 2) {
					cout << "História para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl6 and cor >= 2 and esc >= 2) {
					cout << "História para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "História para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "História para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisa1 and ind >= 2) {
					cout << "História para candidato indígena" << endl;
					break;
				}
				while (hisn >= hisa2 and qui >= 2) {
					cout << "História para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redlog) {
				while (logn >= log) {
					cout << "Logística " << endl;
					break;
				}
				while (logn >= logl1 and ren >= 2 and esc >= 2) {
					cout << "Logística para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (logn >= logl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Logística para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (logn >= logl5 and esc >= 2) {
					cout << "Logística para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (logn >= logl6 and cor >= 2 and esc >= 2) {
					cout << "Logística para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (logn >= logl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Logística para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (logn >= logl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Logística para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (logn >= loga1 and ind >= 2) {
					cout << "Logística para candidato indígena" << endl;
					break;
				}
				while (logn >= loga2 and qui >= 2) {
					cout << "Logística para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redmate) {
				while (maten >= mate) {
					cout << "Matemática " << endl;
					break;
				}
				while (maten >= matel1 and ren >= 2 and esc >= 2) {
					cout << "Matemática para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Matemática para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel5 and esc >= 2) {
					cout << "Matemática para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel6 and cor >= 2 and esc >= 2) {
					cout << "Matemática para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matea1 and ind >= 2) {
					cout << "Matemática para candidato indígena" << endl;
					break;
				}
				while (maten >= matea2 and qui >= 2) {
					cout << "Matemática para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redquim) {
				while (quimn >= quim) {
					cout << "Química " << endl;
					break;
				}
				while (quimn >= quiml1 and ren >= 2 and esc >= 2) {
					cout << "Química para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Química para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml5 and esc >= 2) {
					cout << "Química para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml6 and cor >= 2 and esc >= 2) {
					cout << "Química para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Química para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Química para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quima1 and ind >= 2) {
					cout << "Química para candidato indígena" << endl;
					break;
				}
				while (quimn >= quima2 and qui >= 2) {
					cout << "Química para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
     }
		cout << " " << endl;
		while(city>1 and city<3 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Araguaína (EMVZ):" << endl << " " << endl;
			float medn = (((red * 3) + (nat * 4) + (hum * 2) + (lin * 3) + (mat * 2)) / 14);
			float redmed = 300;
			float med = 771.35;
			float meda1 = 716.83;
			float meda2 = 722.87;
			float medl1 = 744.79;
			float medl2 = 721.03;
			float medl5 = 739.35;
			float medl6 = 723.54;
			float medl10 = 678.77;
			float medl14 = 671.96;
			float vetn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float redvet = 300;
			float vet = 668.67;
			float veta1 = 602.3;
			float veta2 = 580.92;
			float vetl1 = 634.67;
			float vetl2 = 619.74;
			float vetl5 = 674.54;
			float vetl6 = 622.27;
			float vetl10 = 545.16;
			float vetl14 = 585.24;
			float zoon = ((red + (nat * 4) + hum + (lin * 3) + (mat * 4)) / 13);
			float redzoo = 300;
			float zoo = 610.81;
			float zooa1 = 523.48;
			float zooa2 = 607.84;
			float zool1 = 590.91;
			float zool2 = 589.01;
			float zool5 = 611.39;
			float zool6 = 581.87;
			float zool10 = 617.69;
			float zool14 = 516.42;
			while (red >= redmed) {
				while (medn >= med) {
					cout << "Medicina " << endl;
					break;
				}
				while (medn >= medl1 and ren >= 2 and esc >= 2) {
					cout << "Medicina para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Medicina para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl5 and esc >= 2) {
					cout << "Medicina para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl6 and cor >= 2 and esc >= 2) {
					cout << "Medicina para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= medl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (medn >= meda1 and ind >= 2) {
					cout << "Medicina para candidato indígena" << endl;
					break;
				}
				while (medn >= meda2 and qui >= 2) {
					cout << "Medicina para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redvet) {
				while (vetn >= vet) {
					cout << "Medicina Veterinária " << endl;
					break;
				}
				while (vetn >= vetl1 and ren >= 2 and esc >= 2) {
					cout << "Medicina Veterinária para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (vetn >= vetl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Medicina Veterinária para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (vetn >= vetl5 and esc >= 2) {
					cout << "Medicina Veterinária para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (vetn >= vetl6 and cor >= 2 and esc >= 2) {
					cout << "Medicina Veterinária para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (vetn >= vetl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Medicina Veterinária para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (vetn >= vetl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Medicina Veterinária para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (vetn >= veta1 and ind >= 2) {
					cout << "Medicina Veterinária para candidato indígena" << endl;
					break;
				}
				while (vetn >= veta2 and qui >= 2) {
					cout << "Medicina Veterinária para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redzoo) {
				while (zoon >= zoo) {
					cout << "Zootecnia " << endl;
					break;
				}
				while (zoon >= zool1 and ren >= 2 and esc >= 2) {
					cout << "Zootecnia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (zoon >= zool2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Zootecnia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (zoon >= zool5 and esc >= 2) {
					cout << "Zootecnia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (zoon >= zool6 and cor >= 2 and esc >= 2) {
					cout << "Zootecnia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (zoon >= zool10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Zootecnia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (zoon >= zool14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Zootecnia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (zoon >= zooa1 and ind >= 2) {
					cout << "Zootecnia para candidato indígena" << endl;
					break;
				}
				while (zoon >= zooa2 and qui >= 2) {
					cout << "Zootecnia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
}
		cout << " " << endl;
	    while(city > 2 and city < 4 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Porto Nacional:" << endl << " " << endl;
			float letn = ((red + nat + hum + lin + mat) / 5);
			float redlet = 300;
			float let = 612.43;
			float leta1 = 485.35;
			float leta2 = 544.83;
			float letl1 = 550.11;
			float letl2 = 568.33;
			float letl5 = 514.65;
			float letl6 = 576.47;
			float letl10 = 399.55;
			float letl14 = 0.01; // SOBROU
			float bion = (((red * 2) + nat + hum + (lin * 2) + mat) / 7);
			float redbio = 300;
			float bio = 659.73;
			float bioa1 = 506.46;
			float bioa2 = 559.09;
			float biol1 = 536.43;
			float biol2 = 607.7;
			float biol5 = 621.08;
			float biol6 = 586.8;
			float biol10 = 414.98;
			float biol14 = 0.01; // SOBROU
			float socn = ((red + nat + (hum * 4) + (lin * 2) + mat) / 9);
			float redsoc = 300;
			float soc = 576.58;
			float soca1 = 456.05;
			float soca2 = 519.13;
			float socl1 = 544.33;
			float socl2 = 540.41;
			float socl5 = 632.6;
			float socl6 = 557.58;
			float socl10 = 387.27;
			float socl14 = 0.01; // SOBROU
			float geon = ((red + nat + hum + lin + mat) / 5);
			float redgeo = 300;
			float geo = 580.47;
			float geoa1 = 481.61;
			float geoa2 = 516.33;
			float geol1 = 561.99;
			float geol2 = 556.79;
			float geol5 = 578.23;
			float geol6 = 544.59;
			float geol10 = 0.01; // SOBROU
			float geol14 = 0.01; // SOBROU
			float hisn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float redhis = 300;
			float his = 589.29;
			float hisa1 = 470.52;
			float hisa2 = 555.87;
			float hisl1 = 584.62;
			float hisl2 = 566.26;
			float hisl5 = 611.8;
			float hisl6 = 580.27;
			float hisl10 = 0.01; // SOBROU
			float hisl14 = 0.01; // SOBROU
			float reln = (((red * 3) + nat + (hum * 4) + (lin * 3) + mat) / 12);
			float redrel = 300;
			float rel = 691.69;
			float rela1 = 567.02;
			float rela2 = 544.6;
			float rell1 = 662.54;
			float rell2 = 629.76;
			float rell5 = 700.87;
			float rell6 = 608.37;
			float rell10 = 462.87;
			float rell14 = 0.01; // SOBROU
			while (red >= redlet) {
				while (letn >= let) {
					cout << "Letras (Língua Portuguesa ou Inglesa) " << endl;
					break;
				}
				while (letn >= letl1 and ren >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl5 and esc >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl6 and cor >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= letl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (letn >= leta1 and ind >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato indígena" << endl;
					break;
				}
				while (letn >= leta2 and qui >= 2) {
					cout << "Letras (Língua Portuguesa ou Inglesa) para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redbio) {
				while (bion >= bio) {
					cout << "Ciências Biológicas " << endl;
					break;
				}
				while (bion >= biol1 and ren >= 2 and esc >= 2) {
					cout << "Ciências Biológicas para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Biológicas para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol5 and esc >= 2) {
					cout << "Ciências Biológicas para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol6 and cor >= 2 and esc >= 2) {
					cout << "Ciências Biológicas para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Biológicas para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Ciências Biológicas para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= bioa1 and ind >= 2) {
					cout << "Ciências Biológicas para candidato indígena" << endl;
					break;
				}
				while (bion >= bioa2 and qui >= 2) {
					cout << "Ciências Biológicas para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redsoc) {
				while (socn >= soc) {
					cout << "Ciências Sociais " << endl;
					break;
				}
				while (socn >= socl1 and ren >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl5 and esc >= 2) {
					cout << "Ciências Sociais para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl6 and cor >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= soca1 and ind >= 2) {
					cout << "Ciências Sociais para candidato indígena" << endl;
					break;
				}
				while (socn >= soca2 and qui >= 2) {
					cout << "Ciências Sociais para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redgeo) {
				while (geon >= geo) {
					cout << "Geografia " << endl;
					break;
				}
				while (geon >= geol1 and ren >= 2 and esc >= 2) {
					cout << "Geografia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Geografia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol5 and esc >= 2) {
					cout << "Geografia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol6 and cor >= 2 and esc >= 2) {
					cout << "Geografia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (geon >= geoa1 and ind >= 2) {
					cout << "Geografia para candidato indígena" << endl;
					break;
				}
				while (geon >= geoa2 and qui >= 2) {
					cout << "Geografia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redhis) {
				while (hisn >= his) {
					cout << "História " << endl;
					break;
				}
				while (hisn >= hisl1 and ren >= 2 and esc >= 2) {
					cout << "História para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "História para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl5 and esc >= 2) {
					cout << "História para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl6 and cor >= 2 and esc >= 2) {
					cout << "História para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "História para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "História para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (hisn >= hisa1 and ind >= 2) {
					cout << "História para candidato indígena" << endl;
					break;
				}
				while (hisn >= hisa2 and qui >= 2) {
					cout << "História para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redrel) {
				while (reln >= rel) {
					cout << "Relações Internacionais " << endl;
					break;
				}
				while (reln >= rell1 and ren >= 2 and esc >= 2) {
					cout << "Relações Internacionais para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (reln >= rell2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Relações Internacionais para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (reln >= rell5 and esc >= 2) {
					cout << "Relações Internacionais para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (reln >= rell6 and cor >= 2 and esc >= 2) {
					cout << "Relações Internacionais para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (reln >= rell10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Relações Internacionais para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (reln >= rell14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Relações Internacionais para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (reln >= rela1 and ind >= 2) {
					cout << "Relações Internacionais para candidato indígena" << endl;
					break;
				}
				while (reln >= rela2 and qui >= 2) {
					cout << "Relações Internacionais para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << " " << endl;
		while(city > 3 and city < 5 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Gurupi:" << endl << " " << endl;
			float agrn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float redagr = 300;
			float agr = 619.84;
			float agra1 = 466.96;
			float agra2 = 563.79;
			float agrl1 = 602.22;
			float agrl2 = 572.81;
			float agrl5 = 621.33;
			float agrl6 = 595.66;
			float agrl10 = 0.01; // SOBROU
			float agrl14 = 530.34;
			float bion = ((red + (nat * 3) + hum + (lin * 4) + (mat * 4)) / 13);
			float redbio = 300;
			float bio = 639.31;
			float bioa1 = 470.81;
			float bioa2 = 519.94;
			float biol1 = 570.17;
			float biol2 = 586.19;
			float biol5 = 600.18;
			float biol6 = 586.64;
			float biol10 = 469.13;
			float biol14 = 0.01; // SOBROU
			float flon = ((red + (nat * 4) + hum + (lin * 3) + (mat * 4)) / 13);
			float redflo = 300;
			float flo = 598.13;
			float floa1 = 475;
			float floa2 = 472.77;
			float flol1 = 581.19;
			float flol2 = 569.17;
			float flol5 = 620.94;
			float flol6 = 591.95;
			float flol10 = 0.01; // SOBROU
			float flol14 = 0.01; // SOBROU
			float quimn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float redquim = 300;
			float quim = 576.06;
			float quima1 = 435.43;
			float quima2 = 459.56;
			float quiml1 = 563.31;
			float quiml2 = 555;
			float quiml5 = 558.83;
			float quiml6 = 521.79;
			float quiml10 = 0.01; // SOBROU
			float quiml14 = 0.01; // SOBROU
			while (red >= redagr) {
				while (agrn >= agr) {
					cout << "Agronomia " << endl;
					break;
				}
				while (agrn >= agrl1 and ren >= 2 and esc >= 2) {
					cout << "Agronomia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (agrn >= agrl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Agronomia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (agrn >= agrl5 and esc >= 2) {
					cout << "Agronomia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (agrn >= agrl6 and cor >= 2 and esc >= 2) {
					cout << "Agronomia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (agrn >= agrl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Agronomia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (agrn >= agrl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Agronomia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (agrn >= agra1 and ind >= 2) {
					cout << "Agronomia para candidato indígena" << endl;
					break;
				}
				while (agrn >= agra2 and qui >= 2) {
					cout << "Agronomia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redbio) {
				while (bion >= bio) {
					cout << "Engenharia de Bioprocessos e Biotecnologia " << endl;
					break;
				}
				while (bion >= biol1 and ren >= 2 and esc >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol5 and esc >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol6 and cor >= 2 and esc >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= biol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (bion >= bioa1 and ind >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato indígena" << endl;
					break;
				}
				while (bion >= bioa2 and qui >= 2) {
					cout << "Engenharia de Bioprocessos e Biotecnologia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redflo) {
				while (flon >= flo) {
					cout << "Engenharia Florestal " << endl;
					break;
				}
				while (flon >= flol1 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Florestal para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (flon >= flol2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Florestal para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (flon >= flol5 and esc >= 2) {
					cout << "Engenharia Florestal para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (flon >= flol6 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Florestal para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (flon >= flol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Engenharia Florestal para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (flon >= flol14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Engenharia Florestal para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (flon >= floa1 and ind >= 2) {
					cout << "Engenharia Florestal para candidato indígena" << endl;
					break;
				}
				while (flon >= floa2 and qui >= 2) {
					cout << "Engenharia Florestal para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redquim) {
				while (quimn >= quim) {
					cout << "Química Ambiental " << endl;
					break;
				}
				while (quimn >= quiml1 and ren >= 2 and esc >= 2) {
					cout << "Química Ambiental para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Química Ambiental para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml5 and esc >= 2) {
					cout << "Química Ambiental para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml6 and cor >= 2 and esc >= 2) {
					cout << "Química Ambiental para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Química Ambiental para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quiml14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Química Ambiental para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (quimn >= quima1 and ind >= 2) {
					cout << "Química Ambiental para candidato indígena" << endl;
					break;
				}
				while (quimn >= quima2 and qui >= 2) {
					cout << "Química Ambiental para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << " " << endl;
		while(city > 4 and city < 6 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Miracema:" << endl << " " << endl;
			float edfn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float rededf = 300;
			float edf = 569.54;
			float edfa1 = 505.97;
			float edfa2 = 521.02;
			float edfl1 = 526.68;
			float edfl2 = 547.32;
			float edfl5 = 559.8;
			float edfl6 = 556.48;
			float edfl10 = 429.44;
			float edfl14 = 322.56;
			float pedn = ((red + nat + hum + lin + mat) / 5);
			float redped = 200;
			float ped = 557.59;
			float peda1 = 503.21;
			float peda2 = 511.21;
			float pedl1 = 566.75;
			float pedl2 = 512.75;
			float pedl5 = 569.41;
			float pedl6 = 545.39;
			float pedl10 = 0.01; // SOBROU
			float pedl14 = 0.01; // SOBROU
			float psin = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float redpsi = 300;
			float psi = 655.01;
			float psia1 = 536.8;
			float psia2 = 595.22;
			float psil1 = 648.22;
			float psil2 = 617.47;
			float psil5 = 602.05;
			float psil6 = 614.87;
			float psil10 = 586.01;
			float psil14 = 551.75;
			float sern = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float redser = 300;
			float ser = 574.58;
			float sera1 = 505.46;
			float sera2 = 510.52;
			float serl1 = 559.41;
			float serl2 = 546.82;
			float serl5 = 555.04;
			float serl6 = 551.73;
			float serl10 = 537.87;
			float serl14 = 0.01; // SOBROU
			while (red >= rededf) {
				while (edfn >= edf) {
					cout << "Educação Física " << endl;
					break;
				}
				while (edfn >= edfl1 and ren >= 2 and esc >= 2) {
					cout << "Educação Física para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Educação Física para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl5 and esc >= 2) {
					cout << "Educação Física para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl6 and cor >= 2 and esc >= 2) {
					cout << "Educação Física para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfa1 and ind >= 2) {
					cout << "Educação Física para candidato indígena" << endl;
					break;
				}
				while (edfn >= edfa2 and qui >= 2) {
					cout << "Educação Física para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redped) {
				while (pedn >= ped) {
					cout << "Pedagogia " << endl;
					break;
				}
				while (pedn >= pedl1 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl5 and esc >= 2) {
					cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl6 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= peda1 and ind >= 2) {
					cout << "Pedagogia para candidato indígena" << endl;
					break;
				}
				while (pedn >= peda2 and qui >= 2) {
					cout << "Pedagogia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redpsi) {
				while (psin >= psi) {
					cout << "Psicologia " << endl;
					break;
				}
				while (psin >= psil1 and ren >= 2 and esc >= 2) {
					cout << "Psicologia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (psin >= psil2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Psicologia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (psin >= psil5 and esc >= 2) {
					cout << "Psicologia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (psin >= psil6 and cor >= 2 and esc >= 2) {
					cout << "Psicologia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (psin >= psil10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Psicologia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (psin >= psil14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Psicologia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (psin >= psia1 and ind >= 2) {
					cout << "Psicologia para candidato indígena" << endl;
					break;
				}
				while (psin >= psia2 and qui >= 2) {
					cout << "Psicologia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redser) {
				while (sern >= ser) {
					cout << "Serviço Social " << endl;
					break;
				}
				while (sern >= serl1 and ren >= 2 and esc >= 2) {
					cout << "Serviço Social para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (sern >= serl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Serviço Social para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (sern >= serl5 and esc >= 2) {
					cout << "Serviço Social para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (sern >= serl6 and cor >= 2 and esc >= 2) {
					cout << "Serviço Social para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (sern >= serl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Serviço Social para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (sern >= serl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Serviço Social para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (sern >= sera1 and ind >= 2) {
					cout << "Serviço Social para candidato indígena" << endl;
					break;
				}
				while (sern >= sera2 and qui >= 2) {
					cout << "Serviço Social para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << " " << endl;
		while(city > 5 and city < 7 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Tocantinópolis:" << endl << " " << endl;
			float socn = (((red * 3) + nat + (hum * 4) + (lin * 3) + mat) / 12);
			float redsoc = 300;
			float soc = 578.24;
			float soca1 = 397.37;
			float soca2 = 443.42;
			float socl1 = 581.25;
			float socl2 = 566.67;
			float socl5 = 625.56;
			float socl6 = 563.83;
			float socl10 = 469.47;
			float socl14 = 0.01; // SOBROU
			float edfn = (((red * 2) + (nat * 3) + (hum * 3) + (lin * 4) + mat) / 13);
			float rededf = 300;
			float edf = 573.93;
			float edfa1 = 435.86;
			float edfa2 = 453.37;
			float edfl1 = 574.41;
			float edfl2 = 563.25;
			float edfl5 = 594.64;
			float edfl6 = 550.34;
			float edfl10 = 470.24;
			float edfl14 = 0.01; // SOBROU
			float pedn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float redped = 300;
			float ped = 573.5;
			float peda1 = 470.23;
			float peda2 = 523.68;
			float pedl1 = 555.86;
			float pedl2 = 549.38;
			float pedl5 = 573.33;
			float pedl6 = 554.22;
			float pedl10 = 431.78;
			float pedl14 = 0.01; // SOBROU
			while (red >= redsoc) {
				while (socn >= soc) {
					cout << "Ciências Sociais " << endl;
					break;
				}
				while (socn >= socl1 and ren >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl5 and esc >= 2) {
					cout << "Ciências Sociais para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl6 and cor >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= socl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (socn >= soca1 and ind >= 2) {
					cout << "Ciências Sociais para candidato indígena" << endl;
					break;
				}
				while (socn >= soca2 and qui >= 2) {
					cout << "Ciências Sociais para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= rededf) {
				while (edfn >= edf) {
					cout << "Educação Física " << endl;
					break;
				}
				while (edfn >= edfl1 and ren >= 2 and esc >= 2) {
					cout << "Educação Física para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Educação Física para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl5 and esc >= 2) {
					cout << "Educação Física para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl6 and cor >= 2 and esc >= 2) {
					cout << "Educação Física para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (edfn >= edfa1 and ind >= 2) {
					cout << "Educação Física para candidato indígena" << endl;
					break;
				}
				while (edfn >= edfa2 and qui >= 2) {
					cout << "Educação Física para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redped) {
				while (pedn >= ped) {
					cout << "Pedagogia " << endl;
					break;
				}
				while (pedn >= pedl1 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl5 and esc >= 2) {
					cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl6 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= peda1 and ind >= 2) {
					cout << "Pedagogia para candidato indígena" << endl;
					break;
				}
				while (pedn >= peda2 and qui >= 2) {
					cout << "Pedagogia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << " " << endl;
		while(city > 6 and city < 8 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Arraias:" << endl << " " << endl;
			float turn = (((red * 3) + (nat * 2) + (hum * 4) + (lin * 3) + mat) / 13);
			float redtur = 400;
			float tur = 566.27;
			float tura1 = 457.34;
			float tura2 = 504.19;
			float turl1 = 551.48;
			float turl2 = 543.66;
			float turl5 = 605.69;
			float turl6 = 535.28;
			float turl10 = 0.01; // SOBROU
			float turl14 = 0.01; // SOBROU
			while (red >= redtur) {
				while (turn >= tur) {
					cout << "Turismo Patrimonial e Socioambiental " << endl;
					break;
				}
				while (turn >= turl1 and ren >= 2 and esc >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl5 and esc >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl6 and cor >= 2 and esc >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= turl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (turn >= tura1 and ind >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato indígena" << endl;
					break;
				}
				while (turn >= tura2 and qui >= 2) {
					cout << "Turismo Patrimonial e Socioambiental para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << " " << endl;
		while(city > 6 and city < 8 and senha>inferior and senha < superior){
			cout << "Universidade Federal do Tocantins, Campus Arraias (Buritizinho):" << endl << " " << endl;
			float maten = ((red + nat + (hum * 2) + (lin * 4) + (mat * 4)) / 12);
			float redmate = 300;
			float mate = 578.91;
			float matea1 = 0.01; // SOBROU
			float matea2 = 572.12;
			float matel1 = 561.37;
			float matel2 = 546.17;
			float matel5 = 645.76;
			float matel6 = 538.79;
			float matel10 = 0.01; // SOBROU
			float matel14 = 0.01; // SOBROU
			float pedn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float redped = 300;
			float ped = 561.39;
			float peda1 = 406.45;
			float peda2 = 534.62;
			float pedl1 = 558.46;
			float pedl2 = 551.29;
			float pedl5 = 546.32;
			float pedl6 = 552.11;
			float pedl10 = 0.01; // SOBROU
			float pedl14 = 0.01; // SOBROU
			while (red >= redmate) {
				while (maten >= mate) {
					cout << "Matemática " << endl;
					break;
				}
				while (maten >= matel1 and ren >= 2 and esc >= 2) {
					cout << "Matemática para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Matemática para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel5 and esc >= 2) {
					cout << "Matemática para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel6 and cor >= 2 and esc >= 2) {
					cout << "Matemática para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matel14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (maten >= matea1 and ind >= 2) {
					cout << "Matemática para candidato indígena" << endl;
					break;
				}
				while (maten >= matea2 and qui >= 2) {
					cout << "Matemática para candidato quilombola" << endl;
					break;
				}
				break;
			}
			while (red >= redped) {
				while (pedn >= ped) {
					cout << "Pedagogia " << endl;
					break;
				}
				while (pedn >= pedl1 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl5 and esc >= 2) {
					cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl6 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
					cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
					break;
				}
				while (pedn >= peda1 and ind >= 2) {
					cout << "Pedagogia para candidato indígena" << endl;
					break;
				}
				while (pedn >= peda2 and qui >= 2) {
					cout << "Pedagogia para candidato quilombola" << endl;
					break;
				}
				break;
			}
			break;
		}
		cout << "FRASE CRIPTOGRAFADA: 1000010010011110100000100100000010100110100111101010010010101000100010100100001 " << " " << endl;
		cout << "Você deseja fazer outra simulação?" << endl << "Se sim digite 1. Se não digite 0." << endl;
		cin >> rep;
	} while (rep != 0);
	getchar();
 }
